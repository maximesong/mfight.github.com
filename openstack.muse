#title openstack
* 脚本安装
通过devstack.org提供的shell脚本来安装和配置openstack。
** 安装Ubtuntu 11.10(Oneiric)
最稳妥的是安装Ubuntu Server 11.10 64bits。我在Unbuntu Desktop Edition上也试过运行脚本，但是会出现Host Ip没有指定的情况，应该另外配置一下就可以了，但我没有继续研究下去。

** 下载DevStack脚本
*** 安装git
下载脚本需要用到git，如果你的系统还没有安装过git，可以在控制台中用下面的命令安装。
<literal>
<pre class="brush:bash; gutter:true; toolbar:false; ruler:false;">
sudo apt-get install git
</pre>
</literal>

*** 下载脚本
cd到准备存放脚本的文件夹下，然后在控制台执行下面的命令。
<literal>
<pre class="brush:bash; gutter:true; toolbar:false; ruler:false;">
git clone git://github.com/cloudbuilders/devstack.git
</pre>
</literal>

** 运行脚本
<literal>
<pre class="brush:bash; gutter:true; toolbar:false; ruler:false;">
cd devstack # The folder you just cloned
./stack.sh # run the script
</pre>
</literal>

** 安装期间
 - 第一次安装时，脚本可能会提示你设置几个密码，不要嫌烦哦。
 - 如果想要修改默认的配置，可以在顶层文件夹中新建一个localrc文件进行配置。当然你也可以直接修改现有的配置文件（我就是这么干的）。
 - 安装时间可能会比较长，趁次机会，不妨看一看[[http://devstack.org/stack.sh.html][脚本]]究竟干了些什么，注释还是很详细的。

*** 可能遇到的错误
 - 卡在某个地方
  - 在安装python的一些程序时，我遇到过卡在<code>Downloading/Unpacking django-nose-selenium</code>的情况，尝试过修改配置文件，但没有成功，卡住的具体原因不明。
  - 解决方法：手动进行安装
<literal>
<pre class="brush:bash; gutter:true; toolbar:false; ruler:false;">
pip install django-nose-selenium
</pre>
</literal>
虽然安装的版本可能和脚本默认的不太一样，不过最后的Dashboard一切正常，那就无所谓了。
 - gzip: stdin: not in gzip format
  - 尝试了很多办法，最后发现是因为一个压缩包没有下载完整，脚本再次运行时也没有重新下载，导致解压的这一步一直报错
  - 解决方法：手动下载完整的压缩包进行覆盖，重新运行脚本
   - 当然我想删掉压缩包，重新运行脚本可能也是可以的。

** 安装完成
安装完成后会提示你各个配置信息,包括默认的用户名和密码。
比如访问Dashboard的地址<code>horizon is now available at http://10.0.2.15/</code>
*** 访问Dashboard
即使Ubuntu Server默认没有安装桌面环境，一样可以通过控制台中的浏览器访问Dashboard
<literal>
<pre class="brush:bash; gutter:true; toolbar:false; ruler:false;">
w3m http://10.0.2.15
</pre>
</literal>
**** 登录页面是这样的
[[w3m_login.png]]
**** 登录后
[[w3m_logged.png]]
** Virtualbox
如果是在Virtualbox中安装openstack，可以通过NAT和Port Forwarding在原来的系统(Host)内访问虚拟机中系统(Guest)的服务。其原理是将发向Host的某个Ip地址和端口的请求转发给Guest的某个Ip地址和端口，达到在Host上访问Guest的目的，具体设置步骤如下
 - 右键单击虚拟机系统，选择Settings
 - 在左边的选项栏中选择Network
 - 点击Advanced
 - 点击Port Forwarding,进行设置

**** 网络设置
[[network_settings.png]]
**** Port Forwaring设置
[[port_forwarding.png]]

**** 登录
[[openstack_login.png]]

**** 登录后
[[openstack_logged.png]]

* 脚本学习
注意，下面￥的地方其实都是￥。
** 相关bash命令与变量
*** . <filename>
 - 相当于source <filename>，执行filename文件种的脚本

*** ￥EUID
 - 用户权限, 0为特权用户

*** var=￥{str:-expr}
 - 如果str未赋值或为空，var=expr
 - 否则，var=￥str

*** getent database [key ...]
 - 从一些文本数据库中获取我们需要的信息，如getent passwd joe

*** tee [OPTION]... [FILE]..
 - 从标准输入读入，写入到标准输出和文件

*** mktemp
 - 创建临时文件或临时目录

*** /sbin/ifconfig eth0 |grep -m 1 'inet addr:' |cut -d: -f2 |awk '{print ￥1}'

**** grep -m 1 "inet addr:"
 - 第一次匹配成功就结束

**** cut -d: -f2
 - 以“：”来划分块，保留2个块

*** read -e ￥var
 - 读行

*** tr -cd [SET]
 - 从标准输入读入，对<SET>取反，从输入中删除取反后<SET>中的字符，输出到标准输出》

*** trap [[arg] sigspec ...]
 - 当收到sigspec信号时，读取和执行arg命令

*** dpkg -l <package>
 - dpkg是debian的包管理工具，这条命令列出匹配的包

*** useradd -U -G <group> -s <shell> -d <home_dir> -m <create_home>
 - 增加用户，-U，-G增加用户组，-s确定使用的shell，-d为登录目录，-m为创建的用户目录


*** grep -q <pattern> <file>
 - grep结果不输出到标准输出（quietly）

*** chown -R <user> <dir>
 - 改变目录和其子目录、文件的拥有者

*** whoami
 - 输出当前用户名

** 待确定命令

*** ~=
 - 怀疑是smart operator，含有多种功能

*** set -o xtrace / set +o xtrace
 - 疑似-o在标准输出时再次输出命令，+o则不重复输出命令

*** STACK_DIR="￥DEST/￥{PWD##*/}"
 - 未知



* 脚本拆解手动安装
安装环境为 ubuntu 11.10 server 64bits，语言选择英语。由于手动安装加入了“人工智能”，相对脚本有所简化，不过通用性不如脚本来得好。
** 目录结构
 - functions 常用函数
 - stackrc 大部分为默认的git clone地址，并读取localrc的内容
 - files（D） 安装依赖、配置模板等

** 安装步骤
假设用户名为openstack，密码为opensecret

*** 查看本机ip
<literal><pre class="brush:bash; gutter:true; toolbar:false; ruler:false;">
ifconfig eth0
</pre></literal>
记录结果中的<code>inet addr:</code>后的ip地址，如<code>10.0.2.15</code>我们记为<code><host_ip></code>，稍后使用。

*** 安装包
**** 更新
<literal><pre class="brush:bash; gutter:true; toolbar:false; ruler:false;">
sudo apt-get update
</pre></literal>

**** 安装通用包
<literal><pre class="brush:bash; gutter:true; toolbar:false; ruler:false;">
sudo apt-get install pep8 pylint python-pip screen unzip wget psmisc git-core \
     lsof openssh-server vim-nox locate python-virtualenv python-unittest2 \
     iputils-ping wget curl tcpdump euca2ools
</pre></literal>

**** 安装nova包
<literal><pre class="brush:bash; gutter:true; toolbar:false; ruler:false;">
sudo apt-get install dnsmasq-base dnsmasq-utils kpartx parted iputils-arping \
     python-mysqldb python-xattr python-lxml kvm gawk iptables ebtables \
     sqlite3 kvm vlan curl socat python-mox python-paste python-migrate \
     python-gflags python-greenlet python-libvirt python-libxml2 \
     python-routes python-netaddr python-pastedeploy python-eventlet \
     python-cheetah
</pre></literal>

**** 安装swift包
<literal><pre class="brush:bash; gutter:true; toolbar:false; ruler:false;">
sudo apt-get install curl gcc python-configobj python-coverage python-dev \
     python-eventlet python-greenlet python-netifaces python-nose \
     python-pastedeploy python-setuptools python-simplejson python-webob \
     python-xattr sqlite3 xfsprogs
</pre></literal>

**** 安装glance包
<literal><pre class="brush:bash; gutter:true; toolbar:false; ruler:false;">
sudo apt-get install python-eventlet python-routes python-greenlet \
     python-argparse python-sqlalchemy python-wsgiref python-pastedeploy \
     python-xattr
</pre></literal>

**** 安装keystone包
<literal><pre class="brush:bash; gutter:true; toolbar:false; ruler:false;">
sudo apt-get install python-setuptools python-dev python-lxml \
     python-pastescript python-pastedeploy python-paste sqlite3 \
     python-pysqlite2 python-sqlalchemy python-webob python-greenlet \
     python-routes libldap2-dev libsasl2-dev
</pre></literal>

**** 安装horizon包
<literal><pre class="brush:bash; gutter:true; toolbar:false; ruler:false;">
sudo apt-get install python-dateutil python-paste python-pastedeploy \
     python-anyjson python-routes python-xattr python-sqlalchemy python-webob \
     python-kombu pylint pep8 python-evenlet python-nose python-mox \ 
     python-coverage python-cherrypy3 python-django python-django-mailer \
     python-django-nose python-django-registration python-cloudfiles \
     python-migrate
</pre></literal>

**** 安装其他nova包
<literal><pre class="brush:bash; gutter:true; toolbar:false; ruler:false;">
sudo apt-get install python-dateutil lvm2 open-iscsi open-iscsi-utils \
     python-numpy tgt
</pre></literal>

* ISO 安装
精简了的ubuntu linux server 10.04，并剔除了openstack不需要的包，所以大小只有300M左右。但是安装完之后还要到网站注册，收集机器信息，然后部署，比较麻烦，放在这里仅供参考
 - [[http://www.linuxso.com/linuxrumen/17399.html][介绍]]、[[http://sourceforge.net/projects/stackops/files/][下载]]、 [[http://docs.stackops.org.][文档]]、 [[http://getsatisfaction.com/stackops][支持]]



